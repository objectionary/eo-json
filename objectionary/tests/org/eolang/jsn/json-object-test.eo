# MIT License
#
# Copyright (c) 2022 Eugene Darashkevich
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.collections.list
+alias org.eolang.collections.map
+alias org.eolang.hamcrest.assert-that
+alias org.eolang.jsn.json
+alias org.eolang.jsn.json-int
+alias org.eolang.jsn.json-object
+home https://github.com/objectionary/eo-json
+junit
+package org.eolang.jsn
+version 0.0.2

[] > hardcode-json-object-as-string
  json-int 2 > a!
  json-int 3 > b!
  ((map *).with "a" a).with "b" b > mp!
  json-object mp > jo!
  assert-that > @
    jo.as-string
    $.equal-to "{a: 2, b: 3, }"

[] > json-object-creating
  json.of-object > jo!
  assert-that > @
    jo.as-string
    $.equal-to "{}"

[] > json-object-with
  with. > jo!
    with.
      json.of-object
      "age"
      json.of-int 21
    "name"
    json.of-string "John"
  assert-that > @
    jo.as-string
    $.equal-to "{age: 21, name: \"John\", }"

[] > json-object-found
  with. > jo!
    with.
      json.of-object
      "age"
      json.of-int 21
    "name"
    json.of-string "John"
  assert-that > @
    * (((jo.found "age").at 0).as-string) (((jo.found "name").at 0).as-string)
    $.equal-to
      list
        * "21" "\"John\""
